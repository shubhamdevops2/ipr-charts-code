apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}-kd"
  namespace: "{{ .Values.NAMESPACE }}"
  labels:
    environment: "{{ .Values.NAMESPACE }}"
    app: "{{ .Values.label_for_node }}"
spec:
  replicas: {{ .Values.K8S_REPLICAS }}
  strategy: 
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.K8S_MAX_UNAVAIL }}
      maxSurge: {{ .Values.K8S_MAX_SURGE }}
  selector:
    matchLabels:
      app: "{{ .Values.label_for_node }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.label_for_node }}"
    spec:
      restartPolicy: Always
      nodeSelector:
        role: stable
      # tolerations:
      # - key: dedicated
      #   operator: Equal
      #   value: stable
      volumes:
      - name: properties-volume
        persistentVolumeClaim:
          claimName: pv-vol-claim
      imagePullSecrets:
      - name: my-registry
      containers:
      - name: "{{ .Chart.Name }}-kc"
        image: "{{ .Values.DOCKER_APP_IMAGE }}"
        envFrom:
        - configMapRef:
            name: "{{ .Chart.Name }}-kcm"
        resources:
          requests: 
            memory: {{ .Values.K8S_REQ_MEM }}
            cpu: {{ .Values.K8S_REQ_CPU }}
          limits:
            memory: {{ .Values.K8S_LIMIT_MEM }}
            cpu: {{ .Values.K8S_LIMIT_CPU }}
        volumeMounts:
        - mountPath: "{{ .Values.mountPathForPVC }}"
          name: properties-volume
        ports:
        - containerPort: "{{ .Values.services.ports.port }}"
          name: https
          protocol: TCP